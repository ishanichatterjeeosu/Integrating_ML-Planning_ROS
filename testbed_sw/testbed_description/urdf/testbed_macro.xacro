<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Macro to create the testbed -->
  <xacro:macro name="testbed" params="namespace parent mass length width height meshfile">

    <!-- base_link according to ROS conventions: x forward, z up -->

    <!-- Need to add mass to these imaginary links for gazebo to see them -->
    <xacro:property name="mass_empty" value="0.1" />

    <joint name='${namespace}/fixed_joint' type="fixed">
      <parent link="${parent}"/>
      <child link="${namespace}/world_link_x"/>
    </joint>

    <link name="${namespace}/world_link_x">
        <inertial>
        <mass value="${mass_empty}" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0" ixy="0" ixz="0"
                iyy="0" iyz="0"
                izz="0" />
        </inertial>
    </link>

    <link name="${namespace}/world_link_y">
        <inertial>
        <mass value="${mass_empty}" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0" ixy="0" ixz="0"
                iyy="0" iyz="0"
                izz="0" />
        </inertial>
    </link>

    <link name="${namespace}/world_link_z">
        <inertial>
        <mass value="${mass_empty}" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0" ixy="0" ixz="0"
                iyy="0" iyz="0"
                izz="0" />
        </inertial>
    </link>

    <link name="${namespace}/world_link_yaw">
        <inertial>
        <mass value="${mass_empty}" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0" ixy="0" ixz="0"
                iyy="0" iyz="0"
                izz="0" />
        </inertial>
    </link>

    <link name="${namespace}/base_link">
      <inertial>
        <mass value="${mass}"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="${(1/3)*((length**2)+(height**2))*mass}" ixy="0.0" ixz="0.0" 
                 iyy="${(1/3)*((width**2)+(height**2))*mass}" iyz="0.0" 
                 izz="${(1/3)*((length**2)+(width**2))*mass}"/>
      </inertial> 
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${visual_mesh_file}" scale="1 1 1"/>
        </geometry>
      </visual>

      <!-- <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${length} ${width} ${height}" />
        </geometry>
        <material name="Cyan">
          <color rgba="0 1.0 1.0 1.0"/>
        </material>
      </visual> -->

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <!-- <box size="${length} ${width} ${height}" /> -->
          <mesh filename="${visual_mesh_file}" scale="1 1 1"/>
        </geometry>
      </collision>

    </link>

    <joint name="corexy_x" type="prismatic">
      <parent link="${namespace}/world_link_x"/>
      <child link="${namespace}/world_link_y"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <axis xyz="1 0 0"/>
      <limit effort="255" velocity="1.6" lower="-1" upper="1" /> 
      <!-- Assume we are operating in 2x2x1m cube-->
    </joint>

    <joint name="corexy_y" type="prismatic">
      <parent link="${namespace}/world_link_y"/>
      <child link="${namespace}/world_link_z"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <axis xyz="0 1 0"/>
      <limit effort="255" velocity="1.6" lower="-1" upper="1" /> 
      <!-- Assume we are operating in 2x2x1m cube-->
    </joint>

    <joint name="z_axis" type="prismatic">
      <parent link="${namespace}/world_link_z"/>
      <child link="${namespace}/world_link_yaw"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <axis xyz="0 0 1"/>
      <limit effort="255" velocity="1.6" lower="-0.5" upper="0.5" /> 
      <!-- Assume we are operating in 2x2x1m cube-->
    </joint>

    <joint name="yaw" type="revolute">
      <parent link="${namespace}/world_link_yaw"/>
      <child link="${namespace}/base_link"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <axis xyz="0 0 1"/>
      <limit effort="255" velocity="${pi/2}" lower="-${pi}" upper="${pi}" /> 
      <!-- Assume we have no limit on yaw-->
    </joint>

  </xacro:macro>
</robot>