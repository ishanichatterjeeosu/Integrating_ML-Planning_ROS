<!-- A top-level launch file to start the RobotHW interface, Gazebo, MoveIt, and RViz -->

<launch>

    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="use_rviz" default="true"/>

    <!-- spawn robot in gazebo at x,y,z -->
    <arg name="world_pose" value="-x 0 -y 0 -z 0" />

    <arg name="model" default="$(find testbed_description)/urdf/testbed.xacro"/>
    <arg name="world" default="$(find testbed_description)/worlds/empty_world_no_ground.world"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
        <arg name="world_name" value="$(arg world)"/>
    </include>

    <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="testbed_model_spawner"
            pkg="gazebo_ros" type="spawn_model"
            args="-z 1.0 -unpause -urdf -model testbed $(arg world_pose) -param robot_description" respawn="false" output="screen" />

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find testbed_control)/config/testbed_control.yaml" command="load"/>

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" args="joint_trajectory_controller joint_states "/>

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen">
        <!-- <remap from="/joint_states" to="/testbed/joint_states" /> -->
    </node>

    <!-- Set up MoveIt planning scene and trajectory execution -->
    <include file="$(find testbed_moveit_config)/launch/move_group.launch">
        <arg name="load_robot_description" value="false" />
        <arg name="moveit_controller_manager" value="ros_control" />
    </include>

    <!-- Run Rviz and load the default config to see the state of the move_group node -->
    <include file="$(dirname)/moveit_rviz.launch" if="$(arg use_rviz)">
        <arg name="rviz_config" value="$(dirname)/moveit.rviz"/>
        <arg name="debug" value="$(arg debug)"/>
    </include>


</launch>